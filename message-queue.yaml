---
apiVersion: v1
kind: Namespace
metadata:
  name: apps
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-queue-app
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-queue-app
  template:
    metadata:
      labels:
        app: message-queue-app
    spec:
      containers:
        - name: message-queue-app
          image: sattfatt/message-queue:v1.7
          ports:
            - containerPort: 8080 
          env:
          - name: REDIS_URL
            value: "redis.redis-namespace.svc.cluster.local:6379"
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: message-queue-app-service
  namespace: apps
spec:
  selector:
    app: message-queue-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: message-queue-app-ingress
  namespace: apps
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/websocket-services: "your-app-service"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - message-queue.satyam.cloud
      secretName: message-queue-app-tls
  rules:
    - host: message-queue.satyam.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: message-queue-app-service
                port:
                  number: 80
---

